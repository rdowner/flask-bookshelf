AWSTemplateFormatVersion: '2010-09-09'
Description: Python Flask Demo with AWS Secrets Manager

Resources:

  BookshelfVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - { Key: Name, Value: BookshelfVPC }

  BookshelfSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref BookshelfVPC
      AvailabilityZone: eu-west-1a
      CidrBlock: 10.0.4.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - { Key: Name, Value: BookshelfSubnetA }

  BookshelfSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref BookshelfVPC
      AvailabilityZone: eu-west-1b
      CidrBlock: 10.0.8.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - { Key: Name, Value: BookshelfSubnetB }

  BookshelfInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - { Key: Name, Value: BookshelfInternetGateway }

  BookshelfInternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref BookshelfVPC
      InternetGatewayId: !Ref BookshelfInternetGateway

  BookshelfRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref BookshelfVPC
      Tags:
        - { Key: Name, Value: BookshelfRouteTable }

  BookshelfRouteInternetGateway:
    Type: AWS::EC2::Route
    DependsOn: BookshelfInternetGatewayAttachment
    Properties:
      RouteTableId: !Ref BookshelfRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref BookshelfInternetGateway

  BookshelfSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref BookshelfRouteTable
      SubnetId: !Ref BookshelfSubnetA

  BookshelfSubnetBRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref BookshelfRouteTable
      SubnetId: !Ref BookshelfSubnetB

  WebTierSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security rules for the web tier
      VpcId: !Ref BookshelfVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

  DatabaseTierSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security rules for the database tier
      VpcId: !Ref BookshelfVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        SourceSecurityGroupId: !Ref WebTierSecurityGroup

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: bookshelf database
      DBSubnetGroupName: bookshelf
      SubnetIds: [ !Ref BookshelfSubnetA, !Ref BookshelfSubnetB ]

  Database:
    Type: AWS::RDS::DBInstance
    Properties:
      AvailabilityZone: eu-west-1a
      DBInstanceClass: db.t2.micro
      Engine: mysql
      EngineVersion: 5.6.39
      MasterUsername: master
      MasterUserPassword: foobar42
      StorageType: gp2
      AllocatedStorage: 20

      VPCSecurityGroups: [ !Ref DatabaseTierSecurityGroup ]
      DBSubnetGroupName: !Ref DBSubnetGroup
      DBName: bookshelf

  Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-ca0135b3
      InstanceType: t2.micro
      IamInstanceProfile: AmazonEC2RoleforSSM
      KeyName: richardcloudsoft
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet:  [ !Ref WebTierSecurityGroup ]
          SubnetId: !Ref BookshelfSubnetA
      BlockDeviceMappings:
        - DeviceName: /dev/xvda
          Ebs:
            VolumeType: gp2
            DeleteOnTermination: true
            VolumeSize: 8
      UserData:
        Fn::Base64: |
          #!/bin/bash -xe
          yum update -y --security
          yum install -y wget ruby
          wget -O/root/install https://aws-codedeploy-eu-west-1.s3.amazonaws.com/latest/install
          chmod a+x /root/install
          /root/install auto

  ServiceRoleForCodeDeploy:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: codedeploy.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRole

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    DependsOn: Instance
    Properties:
      ComputePlatform: Server

  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      Deployment:
        Description: Deployment
        Revision:
          RevisionType: S3
          S3Location:
            Bucket: downer-codedeploy
            BundleType: tgz
            Key: flask-bookshelf.tar.gz
      Ec2TagFilters:
        - { Key: 'aws:cloudformation:stack-name', Value: 'Bookshelf', Type: "KEY_AND_VALUE" }
        - { Key: 'aws:cloudformation:logical-id', Value: 'Instance', Type: "KEY_AND_VALUE" }
      ServiceRoleArn: !GetAtt [ ServiceRoleForCodeDeploy, Arn ]

  DatabaseEndpointAddressSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: bookshelf-database-endpoint-hostname
      Type: String
      Value: !GetAtt [ Database, Endpoint.Address ]
      Description: Hostname part of the bookshelf RDS instance endpoint

  DatabaseEndpointPortSSMParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: bookshelf-database-endpoint-port
      Type: String
      Value: !GetAtt [ Database, Endpoint.Port ]
      Description: Port number part of the bookshelf RDS instance endpoint
